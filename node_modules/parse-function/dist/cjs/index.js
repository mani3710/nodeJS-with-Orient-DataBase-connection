"use strict";const e=require("@babel/parser"),t={arrayify:e=>null==e?[]:Array.isArray(e)?e:"string"==typeof e?[e]:"function"==typeof e[Symbol.iterator]?[...e]:[e],setDefaults:function(e){return"function"==typeof e&&(e=e.toString("utf8")),"string"!=typeof e&&(e=""),t.setHiddenDefaults({name:null,body:"",args:[],params:""},e||"")},setHiddenDefaults:function(e,t){return e.defaults={},e.value=t,e.isValid=t.length>0,e.isArrow=!1,e.isAsync=!1,e.isNamed=!1,e.isAnonymous=!1,e.isGenerator=!1,e.isExpression=!1,e},getNode:function(t,s){if("function"==typeof s.parse){t.value=`(${t.value})`;const e=s.parse(t.value,s);return(e.program&&e.program.body||e.body)[0].expression}return e.parseExpression(t.value,s)}},s=e=>(e,t)=>{const s=e.type.endsWith("FunctionExpression"),n="ObjectExpression"===e.type;if(s||n){if((e=n?e.properties[0]:e).id=n?e.key:e.id,"Property"===e.type){const t=e.key;(e=e.value).id=t}return t=((e,t)=>(t.isArrow=e.type.startsWith("Arrow"),t.isAsync=e.async||!1,t.isGenerator=e.generator||!1,t.isExpression=e.expression||!1,t.isAnonymous=null===e.id,t.isNamed=!t.isAnonymous,t.name=t.isAnonymous?null:e.id.name,t))(e,t),t=((e,t)=>(e.params.forEach(e=>{const s=e.name||"AssignmentPattern"===e.type&&e.left&&e.left.name||"RestElement"===e.type&&e.argument&&e.argument.name;if(t.args.push(s),e.right&&"SequenceExpression"===e.right.type){const n=e.right.expressions.pop();t.defaults[s]=t.value.slice(n.start,n.end)}else t.defaults[s]=e.right?t.value.slice(e.right.start,e.right.end):void 0}),t.params=t.args.join(", "),t))(e,t),((e,t)=>{t.body=t.value.slice(e.body.start,e.body.end);const s=123===t.body.charCodeAt(0),n=125===t.body.charCodeAt(t.body.length-1);return s&&n&&(t.body=t.body.slice(1,-1)),t})(e,t)}};exports.default=function(e={}){const n=[],r={parse(s,r){const o=t.setDefaults(s);if(!o.isValid)return o;const i={...e,...r},a=o.value.startsWith("function"),u=o.value.startsWith("async function"),l=o.value.startsWith("async"),d=o.value.includes("=>"),c=l&&d,p=/^\*?.+\([\s\S\w\W]*\)\s*\{/i.test(o.value);a||u||c||!p||(o.value=`{ ${o.value} }`);const y=t.getNode(o,i);return n.reduce((e,t)=>t(y,e)||e,o)},use(e){const t=e(r);return"function"==typeof t&&n.push(t),r},define:t.define};return r.use(s),r};const n=Object.keys(exports).filter(e=>"default"!==e).reduce((e,t)=>(e[t]=exports[t],e),{});module.exports=Object.assign(exports.default||{},n);
//# sourceMappingURL=index.js.map
